// Generated by CoffeeScript 1.3.3
(function() {
  var async, cli, color, exec, sys;

  sys = require('sys');

  exec = require('child_process').exec;

  color = require('colors');

  async = require('async');

  cli = require('cli');

  cli.parse({
    m: ['m', ''],
    init: ['init', 'false'],
    serve: [false, 'Serve static files from PATH', 'path', './public']
  });

  cli.main(function(args, options) {
    var execGit, execTest, getRevision, processArgs, tasks;
    console.log(args, options);
    processArgs = function(cb) {
      var _this = this;
      process.argv.forEach(function(val, index, array) {
        if (val === '-m') {
          return options.m = array[index + 1];
        }
      });
      return cb(null);
    };
    execTest = function(cb) {
      return exec('testacular run', puts);
    };
    execGit = function(cmd, cb) {
      var puts;
      puts = function(error, stdout, stderr) {
        if (error) {
          cb(error, null);
        }
        sys.puts(stdout);
        return cb(null, stdout);
      };
      console.log(cmd.green.bold.inverse);
      return exec(cmd, puts);
    };
    getRevision = function(cb) {
      var cmd;
      cmd = 'git rev-list HEAD --count';
      exec(cmd, function(error, stdout, stderr) {
        return console.log('revision: '.green.inverse.bold + ' r'.green.inverse.bold + stdout.green.inverse.bold);
      });
      return cb(null);
    };
    tasks = [async.apply(execGit, "git pull"), async.apply(execGit, "git add ."), async.apply(execGit, "git status"), async.apply(require('./commit')), async.apply(execGit, "git status"), async.apply(execGit, "git push"), async.apply(getRevision)];
    return async.series(tasks);
  });

}).call(this);
